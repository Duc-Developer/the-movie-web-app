{"version":3,"sources":["assets/images/avatar.svg","fields/TextFieldController/index.jsx","features/User/pages/LoginPage/index.jsx","features/User/pages/RegisterPage/index.jsx","features/User/pages/WishListPage/index.jsx","features/User/index.jsx"],"names":["module","exports","TextFieldController","props","control","errors","name","rules","icon","type","enableAdornment","useState","fieldType","setFieldType","handleClickShowPassword","handleMouseDownPassword","render","onChange","Grid","container","spacing","item","xs","TextField","label","fullWidth","e","target","value","InputProps","startAdornment","InputAdornment","position","endAdornment","IconButton","aria-label","onClick","onMouseDown","edge","Typography","color","variant","component","message","defaultProps","defaultValues","username","password","LoginPage","useForm","handleSubmit","dispatch","useDispatch","authState","useSelector","state","auth","className","user","to","onSubmit","data","loginRequest","width","src","userLogo","alt","required","pattern","ButtonBase","Input","avatar","firstName","lastName","RegisterPage","inputRef","useRef","fileValue","setFileValue","preview","setPreview","fileErrorMessage","setFileErrorMessage","createNewUser","justify","Avatar","current","click","ref","files","URL","createObjectURL","style","display","md","convertArray","object","list","key","push","WishListPage","wishlist","setWishlist","useEffect","userId","sessionStorage","getItem","a","database","once","then","snapshot","val","wishList","wishlistApi","getData","length","Container","map","movie","id","sm","MovieCard","image","voteAverage","firstAirDate","originalName","userRoutes","children","login","register","wish_list","User","exact","path"],"mappings":"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","file":"static/js/9.a6741096.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.f620e5fd.svg\";","import React, { useState } from \"react\";\nimport { Controller } from \"react-hook-form\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { Grid, IconButton, Typography } from \"@material-ui/core\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport PropTypes from \"prop-types\";\n\nTextFieldController.propTypes = {\n  control: PropTypes.object,\n  error: PropTypes.object,\n  name: PropTypes.string,\n  rules: PropTypes.object,\n  icon: PropTypes.node,\n  type: PropTypes.string,\n  enableAdornment: PropTypes.bool,\n};\n\nTextFieldController.defaultProps = {\n  enableAdornment: false,\n  type: \"text\",\n};\n\nexport default function TextFieldController(props) {\n  const { control, errors, name, rules, icon, type, enableAdornment } = props;\n  const [fieldType, setFieldType] = useState(type);\n\n  const handleClickShowPassword = () => {\n    setFieldType(\"text\");\n  };\n\n  const handleMouseDownPassword = () => {\n    setFieldType(\"password\");\n  };\n  return (\n    <Controller\n      control={control}\n      name={name}\n      rules={rules}\n      render={({ onChange }) => (\n        <Grid container spacing={1}>\n          <Grid item xs={12}>\n            <TextField\n              label={name}\n              type={fieldType}\n              fullWidth\n              onChange={(e) => {\n                onChange(e.target.value);\n              }}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">{icon}</InputAdornment>\n                ),\n                endAdornment: enableAdornment && (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                      edge=\"end\"\n                    >\n                      {fieldType === \"text\" ? (\n                        <Visibility />\n                      ) : (\n                        <VisibilityOff />\n                      )}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            {errors[name] && (\n              <Typography color=\"error\" variant=\"caption\" component=\"i\">\n                {errors[name].message}\n              </Typography>\n            )}\n          </Grid>\n        </Grid>\n      )}\n    />\n  );\n}\n","import React from \"react\";\nimport TextFieldController from \"../../../../fields/TextFieldController\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\nimport { useForm } from \"react-hook-form\";\nimport { ButtonBase, Input, Typography } from \"@material-ui/core\";\nimport userLogo from \"../../../../assets/images/avatar.svg\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginRequest } from \"../../../../actions/auth.actions\";\nimport { Redirect } from \"react-router-dom\";\n\nconst defaultValues = {\n  username: \"\",\n  password: \"\",\n};\n\nexport default function LoginPage() {\n  const { handleSubmit, errors, control } = useForm({\n    defaultValues,\n  });\n  const dispatch = useDispatch();\n  const authState = useSelector((state) => state.auth);\n\n  const onSubmit = (data) => {\n    dispatch(loginRequest(data));\n  };\n\n  return (\n    <div className=\"login-page\">\n      {\n        authState.user && <Redirect to=\"/\" />\n      }\n      <form onSubmit={handleSubmit(onSubmit)} className=\"login-page__form\">\n        <img width=\"120px\" src={userLogo} alt=\"user-logo-form\" />\n        <Typography variant=\"h5\">WELCOME</Typography>\n        {authState.message && (\n          <Typography variant=\"subtitle1\" color=\"error\">\n            {authState.message}\n          </Typography>\n        )}\n        <TextFieldController\n          errors={errors}\n          control={control}\n          rules={{\n            required: { value: true, message: \"Please enter user name\" },\n            pattern: {\n              value: /^[a-zA-Z0-9]+$/,\n              message: \"User name must be letters and numbers\",\n            },\n          }}\n          icon={<AccountCircle />}\n          name=\"username\"\n          type=\"text\"\n        />\n        <TextFieldController\n          errors={errors}\n          control={control}\n          rules={{\n            required: { value: true, message: \"Password is required\" },\n            pattern: {\n              value: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/,\n              message:\n                \"Password is more than 8 characters and including numbers and letters\",\n            },\n          }}\n          icon={<VpnKeyIcon />}\n          name=\"password\"\n          type=\"password\"\n          enableAdornment\n        />\n        <div className=\"login-page__login-button\">\n          <ButtonBase>\n            <Input fullWidth value=\"LOGIN\" type=\"submit\" />\n          </ButtonBase>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport TextFieldController from \"../../../../fields/TextFieldController\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\nimport { useForm } from \"react-hook-form\";\nimport { Avatar, ButtonBase, Grid, Input, Typography } from \"@material-ui/core\";\nimport userLogo from \"../../../../assets/images/avatar.svg\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createNewUser } from \"../../../../actions\";\n\nconst defaultValues = {\n  username: \"\",\n  password: \"\",\n  avatar: {},\n  firstName: \"\",\n  lastName: \"\",\n};\n\nexport default function RegisterPage() {\n  const { handleSubmit, errors, control } = useForm({\n    defaultValues,\n  });\n  const inputRef = useRef(null);\n  const [fileValue, setFileValue] = useState(null);\n  const [preview, setPreview] = useState(userLogo);\n  const [fileErrorMessage, setFileErrorMessage] = useState(null);\n  const authState = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  const onSubmit = (data) => {\n    if (fileValue === null) {\n      setFileErrorMessage(\"Avatar must be update!\");\n      return;\n    }\n    if (fileValue?.type !== \"image/jpeg\") {\n      setFileErrorMessage(\"Avatar must be .jpeg file!\");\n      return;\n    }\n    dispatch(\n      createNewUser({\n        ...data,\n        avatar: fileValue,\n      })\n    );\n  };\n\n  return (\n    <div className=\"register-page\">\n      <form onSubmit={handleSubmit(onSubmit)} className=\"register-page__form\">\n        <Grid container spacing={2}>\n          <Grid container justify=\"center\" item xs={12}>\n            <div className=\"register-page__avatar\">\n              <Avatar\n                src={preview}\n                alt=\"user-logo-form\"\n                onClick={() => {\n                  inputRef.current.click();\n                }}\n              />\n            </div>\n\n            <input\n              name=\"avatar\"\n              ref={inputRef}\n              onChange={(e) => {\n                if (e.target.files[0]) {\n                  setFileValue(e.target.files[0]);\n                  setPreview(URL.createObjectURL(e.target.files[0]));\n                }\n              }}\n              style={{ display: \"none\" }}\n              type=\"file\"\n            />\n          </Grid>\n          <Grid container justify=\"center\" item xs={12}>\n            <Typography color=\"error\" variant=\"caption\" component=\"i\">\n              {fileErrorMessage}\n            </Typography>\n          </Grid>\n          <Grid container justify=\"center\" item xs={12}>\n            <Typography variant=\"h5\">REGISTER</Typography>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextFieldController\n              errors={errors}\n              control={control}\n              rules={{\n                required: { value: true, message: \"First name is required\" },\n                pattern: {\n                  value: /^[a-zA-Z]+$/,\n                  message: \"First name must be letters\",\n                },\n              }}\n              icon={<div />}\n              name=\"firstName\"\n              type=\"text\"\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextFieldController\n              errors={errors}\n              control={control}\n              rules={{\n                required: { value: true, message: \"Last name is required\" },\n                pattern: {\n                  value: /^[a-zA-Z]+$/,\n                  message: \"Last name must be letters\",\n                },\n              }}\n              icon={<div />}\n              name=\"lastName\"\n              type=\"text\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextFieldController\n              errors={errors}\n              control={control}\n              rules={{\n                required: { value: true, message: \"Please enter user name\" },\n                pattern: {\n                  value: /^[a-zA-Z0-9]+$/,\n                  message: \"User name must be letters and numbers\",\n                },\n              }}\n              icon={<AccountCircle />}\n              name=\"username\"\n              type=\"text\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextFieldController\n              errors={errors}\n              control={control}\n              rules={{\n                required: { value: true, message: \"Password is required\" },\n                pattern: {\n                  value: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/,\n                  message:\n                    \"Password is more than 8 characters and including numbers and letters\",\n                },\n              }}\n              icon={<VpnKeyIcon />}\n              name=\"password\"\n              type=\"password\"\n              enableAdornment\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <div className=\"register-page__login-button\">\n              <ButtonBase>\n                <Input fullWidth value=\"REGISTER\" type=\"submit\" />\n              </ButtonBase>\n            </div>\n          </Grid>\n          <Grid container justify=\"center\" item xs={12}>\n            <Typography variant=\"subtitle1\" color=\"error\">\n              {authState.message}\n            </Typography>\n          </Grid>\n        </Grid>\n      </form>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Container, Grid, Typography } from \"@material-ui/core\";\nimport { database } from \"../../../../firebase\";\nimport MovieCard from \"../../../../components/MovieCard\";\n\nfunction convertArray(object) {\n  let list = [];\n  for (var key in object) {\n    list.push(object[key]);\n  }\n  return list;\n}\n\nexport default function WishListPage() {\n  const [wishlist, setWishlist] = useState([]);\n\n  useEffect(() => {\n    const userId = sessionStorage.getItem(\"userId\");\n    async function getData() {\n      let wishlistApi = await database\n        .ref(\"/users/\" + userId)\n        .once(\"value\")\n        .then((snapshot) => snapshot.val()?.wishList);\n      setWishlist(convertArray(wishlistApi));\n    }\n    getData();\n  }, [wishlist.length]);\n\n  return (\n    <div className=\"wishlist-page\">\n      <Container>\n        <Typography variant=\"h5\" component=\"h1\">\n          WISH LIST:\n        </Typography>\n        <Grid container spacing={2}>\n          {!wishlist.length ? (\n            <Typography variant=\"h6\">\n              User have not movie on wishlist!\n            </Typography>\n          ) : (\n            wishlist.map((movie) => {\n              return (\n                <Grid key={movie.id} item xs={12} sm={3}>\n                  <MovieCard\n                    id={movie.id}\n                    type={movie.type}\n                    image={movie.image}\n                    voteAverage={movie.voteAverage}\n                    name={movie.name}\n                    firstAirDate={movie.firstAirDate}\n                    originalName={movie.originalName}\n                  />\n                </Grid>\n              );\n            })\n          )}\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { userRoutes } from '../../constants';\nimport LoginPage from './pages/LoginPage';\nimport RegisterPage from './pages/RegisterPage';\nimport WishListPage from './pages/WishListPage';\n\nconst { login, register, wish_list } = userRoutes.children;\n\nexport default function User() {\n    return (\n        <div>\n            <Switch>\n                <Route exact path={userRoutes.path + login.path}>\n                    <LoginPage />\n                </Route>\n                <Route exact path={userRoutes.path + register.path}>\n                    <RegisterPage />\n                </Route>\n                <Route exact path={userRoutes.path + wish_list.path}>\n                    <WishListPage />\n                </Route>\n            </Switch>\n        </div>\n    )\n}"],"sourceRoot":""}