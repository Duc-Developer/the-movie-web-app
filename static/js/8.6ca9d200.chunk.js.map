{"version":3,"sources":["assets/images/default_avatar.png","features/Peoples/components/PeopleCard/index.jsx","components/TabBarController/index.jsx","features/SearchPage/MovieTab/index.jsx","features/SearchPage/TvTab/index.jsx","features/SearchPage/PeopleTab/index.jsx","features/SearchPage/index.jsx"],"names":["module","exports","PeopleCard","props","image","name","knownFor","id","useState","expanded","setExpanded","history","useHistory","className","path","images","avatarDefault","title","onClick","push","window","scrollTo","top","behavior","disableGutters","button","primary","variant","in","timeout","unmountOnExit","map","item","key","color","component","TabPanel","children","value","index","Box","p","TabBarController","React","setValue","AppBar","position","Tabs","onChange","event","newValue","indicatorColor","textColor","aria-label","tabChildren","Tab","label","onChangeIndex","node","MovieTab","keySearch","page","setPage","data","setData","totalPages","setTotalPages","useEffect","a","axios","get","process","then","res","results","movieApi","total_pages","totalPageRes","getData","length","Grid","container","spacing","xs","Pagination","count","e","num","md","MovieCard","type","poster_path","originalName","original_title","voteAverage","vote_average","firstAirDate","release_date","TvTab","tvApi","original_name","first_air_date","PeopleTab","peopleApi","profile_path","known_for","SearchPage","useLocation","search","slice","style","paddingTop","Container","Typography"],"mappings":"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","file":"static/js/8.6ca9d200.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default_avatar.31c9688c.png\";","import React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\nimport { moivesDbConstants as path } from \"../../../../constants\";\nimport {\n  Collapse,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport { useHistory } from \"react-router-dom\";\nimport avatarDefault from \"../../../../assets/images/default_avatar.png\";\n\nPeopleCard.propTypes = {\n  image: PropTypes.string,\n  name: PropTypes.string,\n  knownFor: PropTypes.array,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default function PeopleCard(props) {\n  const { image, name, knownFor, id } = props;\n  const [expanded, setExpanded] = useState(false);\n  const history = useHistory();\n\n  return (\n    <div className=\"people-card\">\n      <Card className=\"people-card__wraper\">\n        <CardMedia\n          className=\"people-card__media\"\n          image={image ? path.images + image : avatarDefault}\n          title={name}\n          onClick={() => {\n            history.push(`/peoples/person/${id}`);\n            window.scrollTo({\n              top: 0,\n              behavior: \"smooth\",\n            });\n          }}\n        />\n        <CardContent>\n          <List>\n            <ListItem\n              disableGutters\n              button\n              onClick={() => {\n                setExpanded(!expanded);\n              }}\n            >\n              <ListItemText\n                primary={<Typography variant=\"h6\">{name}</Typography>}\n              />\n              <ListItemIcon>\n                {expanded ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n              </ListItemIcon>\n            </ListItem>\n          </List>\n          <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n            {knownFor &&\n              knownFor.map((item) => {\n                return (\n                  <Typography\n                    key={item.id}\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    {item.name || item.title}\n                  </Typography>\n                );\n              })}\n          </Collapse>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nTabBarController.propTypes = {\n    tabChildren: PropTypes.array\n}\n\nfunction TabPanel(props) {\n  const { children, value, index } = props;\n\n  return <div>{value === index && <Box p={2}>{children}</Box>}</div>;\n}\n\nexport default function TabBarController(props) {\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n    <div>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          //   variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          {\n              props.tabChildren.map((item, index) => {\n                  return (\n                      <Tab key={index} label={item.name} />\n                  )\n              })\n          }\n        </Tabs>\n      </AppBar>\n      <SwipeableViews index={value} onChangeIndex={handleChangeIndex}>\n        {/* <TabPanel value={value} index={0}>\n          Item One\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          Item Two\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          Item Three\n        </TabPanel> */}\n        {\n            props.tabChildren.map((item, index) => {\n                return (\n                    <TabPanel key={index} value={value} index={index}>\n                        {item.node}\n                    </TabPanel>\n                )\n            })\n        }\n      </SwipeableViews>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport MovieCard from \"../../../components/MovieCard\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { Pagination } from \"@material-ui/lab\";\n\nMovieTab.propTypes = {\n  keySearch: PropTypes.string,\n};\n\nexport default function MovieTab(props) {\n  const { keySearch } = props;\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  const [totalPages, setTotalPages] = useState(1);\n\n  useEffect(() => {\n    async function getData() {\n      let movieApi = await axios\n        .get(\n          `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}&language=vi&query=${keySearch}&page=${page}&include_adult=false`\n        )\n        .then((res) => res.data.results);\n      let totalPageRes = await axios\n        .get(\n          `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}&language=vi&query=${keySearch}&page=${page}&include_adult=false`\n        )\n        .then((res) => res.data.total_pages);\n      setData(movieApi);\n      setTotalPages(totalPageRes);\n    }\n    getData();\n  }, [page, data.length, totalPages]);\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12}>\n        <Pagination\n          color=\"secondary\"\n          count={totalPages}\n          onChange={(e, num) => {\n            setPage(num);\n          }}\n        />\n      </Grid>\n      {data &&\n        data.map((item) => {\n          return (\n            <Grid key={item.id} item xs={12} md={2}>\n              <MovieCard\n                type=\"movies\"\n                image={item.poster_path}\n                originalName={item.original_title}\n                id={item.id}\n                voteAverage={item.vote_average}\n                name={item.title}\n                firstAirDate={item.release_date}\n              />\n            </Grid>\n          );\n        })}\n    </Grid>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport MovieCard from \"../../../components/MovieCard\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { Pagination } from \"@material-ui/lab\";\n\nTvTab.propTypes = {\n  keySearch: PropTypes.string,\n};\n\nexport default function TvTab(props) {\n  const { keySearch } = props;\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  const [totalPages, setTotalPages] = useState(1);\n\n  useEffect(() => {\n    async function getData() {\n      let tvApi = await axios\n        .get(\n          `https://api.themoviedb.org/3/search/tv?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}&language=vi&query=${keySearch}&page=${page}&include_adult=false`\n        )\n        .then((res) => res.data.results);\n      let totalPageRes = await axios\n        .get(\n          `https://api.themoviedb.org/3/search/tv?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}&language=vi&query=${keySearch}&page=${page}&include_adult=false`\n        )\n        .then((res) => res.data.total_pages);\n      setData(tvApi);\n      setTotalPages(totalPageRes);\n    }\n    getData();\n  }, [page, data.length, totalPages]);\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12}>\n        <Pagination\n          color=\"secondary\"\n          count={totalPages}\n          onChange={(e, num) => {\n            setPage(num);\n          }}\n        />\n      </Grid>\n      {data &&\n        data.map((item) => {\n          return (\n            <Grid key={item.id} item xs={12} md={2}>\n              <MovieCard\n                type=\"tv\"\n                image={item.poster_path}\n                originalName={item.original_name}\n                id={item.id}\n                voteAverage={item.vote_average}\n                name={item.name}\n                firstAirDate={item.first_air_date}\n              />\n            </Grid>\n          );\n        })}\n    </Grid>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PeopleCard from \"../../Peoples/components/PeopleCard\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { Pagination } from \"@material-ui/lab\";\n\nPeopleTab.propTypes = {\n  keySearch: PropTypes.string,\n};\n\nexport default function PeopleTab(props) {\n  const { keySearch } = props;\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  const [totalPages, setTotalPages] = useState(1);\n\n  useEffect(() => {\n    async function getData() {\n      let peopleApi = await axios\n        .get(\n          `https://api.themoviedb.org/3/search/person?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}&language=vi&query=${keySearch}&page=${page}&include_adult=false`\n        )\n        .then((res) => res.data.results);\n      let totalPageRes = await axios\n        .get(\n          `https://api.themoviedb.org/3/search/person?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}&language=vi&query=${keySearch}&page=${page}&include_adult=false`\n        )\n        .then((res) => res.data.total_pages);\n      setData(peopleApi);\n      setTotalPages(totalPageRes);\n    }\n    getData();\n  }, [page, data.length, totalPages]);\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12}>\n        <Pagination\n          color=\"secondary\"\n          count={totalPages}\n          onChange={(e, num) => {\n            setPage(num);\n          }}\n        />\n      </Grid>\n      {data &&\n        data.map((item) => {\n          return (\n            <Grid key={item.id} item xs={12} md={2}>\n              <PeopleCard\n                image={item.profile_path}\n                name={item.name}\n                knownFor={item.known_for}\n                id={item.id}\n              />\n            </Grid>\n          );\n        })}\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { Container, Typography } from \"@material-ui/core\";\nimport { useLocation } from \"react-router-dom\";\nimport TabBarController from \"../../components/TabBarController\";\nimport MovieTab from \"./MovieTab\";\nimport TvTab from \"./TvTab\";\nimport PeopleTab from \"./PeopleTab\";\n\nexport default function SearchPage() {\n  const location = useLocation();\n  const keySearch = location.search.slice(7);\n\n  return (\n    <div style={{ paddingTop: \"5em\" }}>\n      <Container>\n        <Typography variant=\"h4\" component=\"h1\">\n          Movies and TV Shows:\n        </Typography>\n        <TabBarController\n          tabChildren={[\n            { name: \"Movie\", node: <MovieTab keySearch={keySearch} /> },\n            { name: \"TV Show\", node: <TvTab keySearch={keySearch} /> },\n            {name: \"Peoples\", node: <PeopleTab keySearch={keySearch} />}\n          ]}\n        />\n      </Container>\n    </div>\n  );\n}\n"],"sourceRoot":""}