{"version":3,"sources":["features/Movies/pages/MoviePreview/index.jsx","features/Movies/pages/NowPlayingPage/index.jsx","features/Movies/pages/PopularPage/index.jsx","features/Movies/pages/TopRatedPage/index.jsx","features/Movies/pages/UpCommingPage/index.jsx","features/Movies/index.jsx"],"names":["sliderNumberCurrent","screen","window","width","charaterSliderSettings","dots","infinite","speed","slidesToShow","slidesToScroll","className","i","style","color","border","borderRadius","trailerSliderSettings","MoviePreview","params","useParams","useState","posterImages","setPosterImages","backDrops","setBackDrops","details","setDetails","characters","setCharacters","trailers","setTrailers","reviews","setReviews","expanded","setExpanded","useEffect","a","axios","get","id","process","then","res","data","posters","posterApi","backdrops","backDropApi","detailApi","cast","characterApi","results","trailerApi","reviewApi","getData","length","Grid","container","HeaderPosterPrev","backDrop","path","images","file_path","backDropGradient","posterDefault","map","item","spacing","xs","Typography","variant","character","key","PersonSimpleCard","name","role","image","profile_path","component","trailer","type","src","List","review","ListItem","ListItemIcon","ListItemText","primary","content","onClick","NowPlayingPage","list","setList","page","setPage","totalPages","setTotalPages","total_pages","CommonPage","listData","handlePageChange","num","PopularPage","TopRatedPage","UpcomingPage","movieRoutes","children","popular","upcoming","top_rated","now_playing","Movies","paddingTop","Container","exact"],"mappings":"+ZAuBA,SAASA,IACP,IAAIC,EAASC,OAAOD,OAAOE,MAC3B,OAAIF,GAAU,IACL,EAELA,EAAS,KAAOA,GAAU,KACrB,EAELA,EAAS,MAAQA,GAAU,KACtB,EAELA,EAAS,KACJ,OADT,EAKF,IAAMG,GAAsB,GAC1BC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAcR,IACdS,eAAgB,GALU,+BAMVT,KANU,4BAOd,SAACK,GAAD,OACV,6BACE,wBAAIK,UAAU,8BAA8BL,OATtB,8BAYZ,SAACM,GAAD,OACZ,yBACEC,MAAO,CACLT,MAAO,OACPU,MAAO,OACPC,OAAQ,iBACRC,aAAc,QAGfJ,EAAI,MArBiB,GA0BtBK,EAAwB,CAC5BX,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,GAGH,SAASQ,IACtB,IAAMC,EAASC,cADsB,EAEGC,mBAAS,IAFZ,mBAE9BC,EAF8B,KAEhBC,EAFgB,OAGHF,mBAAS,IAHN,mBAG9BG,EAH8B,KAGnBC,EAHmB,OAIPJ,mBAAS,MAJF,mBAI9BK,EAJ8B,KAIrBC,EAJqB,OAKDN,mBAAS,IALR,mBAK9BO,EAL8B,KAKlBC,EALkB,OAMLR,mBAAS,IANJ,mBAM9BS,EAN8B,KAMpBC,EANoB,OAOPV,mBAAS,IAPF,mBAO9BW,EAP8B,KAOrBC,EAPqB,OAQLZ,oBAAS,GARJ,mBAQ9Ba,EAR8B,KAQpBC,EARoB,KA4DrC,OAlDAC,qBAAU,WAAM,4CACd,sCAAAC,EAAA,sEACwBC,IACnBC,IADmB,6CAEoBpB,EAAOqB,GAF3B,2BAEgDC,mCAFhD,2CAInBC,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKC,WAL5B,cACMC,EADN,gBAM0BR,IACrBC,IADqB,6CAEkBpB,EAAOqB,GAFzB,2BAE8CC,mCAF9C,2CAIrBC,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKG,aAV5B,cAMMC,EANN,gBAWwBV,IACnBC,IADmB,6CAEoBpB,EAAOqB,GAF3B,oBAEyCC,mCAFzC,iBAInBC,MAAK,SAACC,GAAD,OAASA,EAAIC,QAfvB,cAWMK,EAXN,iBAgB2BX,IACtBC,IADsB,6CAEiBpB,EAAOqB,GAFxB,4BAE8CC,qCAEpEC,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKM,QApB5B,eAgBMC,EAhBN,iBAqByBb,IACpBC,IADoB,6CAEmBpB,EAAOqB,GAF1B,2BAE+CC,qCAEnEC,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKQ,WAzB5B,eAqBMC,EArBN,iBA0BwBf,IACnBC,IADmB,qDAGepB,EAAOqB,GAHtB,4BAG4CC,mCAH5C,YAKnBC,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKQ,WA/B5B,QA0BME,EA1BN,OAiCE/B,EAAgBuB,GAChBrB,EAAauB,GACbrB,EAAWsB,GACXpB,EAAcsB,GACdpB,EAAYsB,GACZpB,EAAWqB,GAtCb,6CADc,uBAAC,WAAD,wBAyCdC,KACC,CACDjC,EAAakC,OACbhC,EAAUgC,OACV5B,EAAW4B,OACX1B,EAAS0B,OACTxB,EAAQwB,SAIR,yBAAK7C,UAAU,iBACb,kBAAC8C,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACC,EAAA,EAAD,CACEjC,QAASA,EACTkC,SACuB,IAArBpC,EAAUgC,OACN,GADJ,UAEOK,IAAKC,QAFZ,OAEqBtC,EAAU,GAAGuC,WAEpCC,iBA1HR,6GA2HQ1C,aAC0B,IAAxBA,EAAakC,OACT,CAACS,KACD3C,EAAa4C,KAAI,SAACC,GAAD,OAAUN,IAAKC,OAASK,EAAKJ,eAGtD,kBAACN,EAAA,EAAD,CACEC,WAAS,EACTS,MAAI,EACJC,QAAS,EACTC,GAAI,GACJ1D,UAAU,4BAEV,kBAAC8C,EAAA,EAAD,CAAMU,MAAI,EAACE,GAAI,IACb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,mBAEuB,IAAtB3C,EAAW4B,OACV,oEAEA,kBAAC,IAAWnD,EACTuB,EAAWsC,KAAI,SAACM,GACf,OACE,yBACE7D,UAAU,2BACV8D,IAAKD,EAAUhC,IAEf,kBAACkC,EAAA,EAAD,CACElC,GAAIgC,EAAUhC,GACdmC,KAAMH,EAAUG,KAChBC,KAAMJ,EAAUA,UAChBK,MAAOL,EAAUM,qBAQ/B,kBAACrB,EAAA,EAAD,CAAMU,MAAI,EAACE,GAAI,IACb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,YACqB,IAApBzC,EAAS0B,OACR,kBAACc,EAAA,EAAD,CAAYC,QAAQ,YAAYQ,UAAU,KAA1C,uCAIA,kBAAC,IAAW9D,EACTa,EAASoC,KAAI,SAACc,GACb,OACE,yBAAKP,IAAKO,EAAQxC,IAChB,4BACEA,GAAIwC,EAAQxC,GACZyC,KAAK,YACLtE,UAAU,gCACVuE,IAAG,wCAAmCF,EAAQP,aAQ5D,kBAAChB,EAAA,EAAD,CAAMU,MAAI,EAACE,GAAI,IACb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,YACoB,IAAnBvC,EAAQwB,OACP,kBAACc,EAAA,EAAD,CAAYC,QAAQ,aAApB,qCAIA,yBAAK5D,UAAU,0BACb,kBAACwE,EAAA,EAAD,KACGnD,EAAQkC,KAAI,SAACkB,GACZ,OACE,kBAACC,EAAA,EAAD,CACEZ,IAAKW,EAAO5C,GACZ7B,UACEuB,IAAakD,EAAO5C,GAChB,8BACA,yCAGN,kBAAC8C,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcC,QAASJ,EAAOK,UAC9B,kBAACH,EAAA,EAAD,KACGpD,IAAakD,EAAO5C,GACnB,kBAAC,IAAD,CACEkD,QAAS,WACPvD,EAAYiD,EAAO5C,OAIvB,kBAAC,IAAD,CACEkD,QAAS,WACPvD,GAAY,iB,aC1O7B,SAASwD,IAAkB,IAAD,EACftE,mBAAS,IADM,mBAChCuE,EADgC,KAC1BC,EAD0B,OAEfxE,mBAAS,GAFM,mBAEhCyE,EAFgC,KAE1BC,EAF0B,OAGH1E,mBAAS,GAHN,mBAGhC2E,EAHgC,KAGpBC,EAHoB,KAiBvC,OAZA7D,qBAAU,WACRE,IACGC,IADH,iEAE8DE,mCAF9D,6BAE2HqD,IAExHpD,MAAK,SAACC,GACLkD,EAAQlD,EAAIC,KAAKQ,SACjB6C,EAActD,EAAIC,KAAKsD,kBAG1B,CAACN,EAAKpC,OAAQsC,IAGf,6BACE,kBAACK,EAAA,EAAD,CACEC,SAAUR,EACVI,WAAYA,EACZf,KAAK,SACLoB,iBAAkB,SAACC,GACjBP,EAAQO,OCxBH,SAASC,IAAe,IAAD,EACZlF,mBAAS,IADG,mBAC7BuE,EAD6B,KACvBC,EADuB,OAEZxE,mBAAS,GAFG,mBAE7ByE,EAF6B,KAEvBC,EAFuB,OAGA1E,mBAAS,GAHT,mBAG7B2E,EAH6B,KAGjBC,EAHiB,KAgBpC,OAXA7D,qBAAU,WACRE,IACGC,IADH,6DAE0DE,mCAF1D,6BAEuHqD,IAEpHpD,MAAK,SAACC,GACLkD,EAAQlD,EAAIC,KAAKQ,SACjB6C,EAActD,EAAIC,KAAKsD,kBAE1B,CAACN,EAAKpC,OAAQsC,IAGf,6BACE,kBAACK,EAAA,EAAD,CACEC,SAAUR,EACVI,WAAYA,EACZf,KAAK,SACLoB,iBAAkB,SAACC,GACjBP,EAAQO,OCvBH,SAASE,IAAgB,IAAD,EACbnF,mBAAS,IADI,mBAC9BuE,EAD8B,KACxBC,EADwB,OAEbxE,mBAAS,GAFI,mBAE9ByE,EAF8B,KAExBC,EAFwB,OAGD1E,mBAAS,GAHR,mBAG9B2E,EAH8B,KAGlBC,EAHkB,KAgBrC,OAXA7D,qBAAU,WACRE,IACGC,IADH,+DAE4DE,mCAF5D,6BAEyHqD,IAEtHpD,MAAK,SAACC,GACLkD,EAAQlD,EAAIC,KAAKQ,SACjB6C,EAActD,EAAIC,KAAKsD,kBAE1B,CAACN,EAAKpC,OAAQsC,IAGf,6BACE,kBAACK,EAAA,EAAD,CACEC,SAAUR,EACVI,WAAYA,EACZf,KAAK,SACLoB,iBAAkB,SAACC,GACjBP,EAAQO,OCvBH,SAASG,IAAgB,IAAD,EACbpF,mBAAS,IADI,mBAC9BuE,EAD8B,KACxBC,EADwB,OAEbxE,mBAAS,GAFI,mBAE9ByE,EAF8B,KAExBC,EAFwB,OAGD1E,mBAAS,GAHR,mBAG9B2E,EAH8B,KAGlBC,EAHkB,KAgBrC,OAXA7D,qBAAU,WACRE,IACGC,IADH,8DAE2DE,mCAF3D,6BAEwHqD,IAErHpD,MAAK,SAACC,GACLkD,EAAQlD,EAAIC,KAAKQ,SACjB6C,EAActD,EAAIC,KAAKsD,kBAE1B,CAACN,EAAKpC,OAAQsC,IAGf,6BACE,kBAACK,EAAA,EAAD,CACEC,SAAUR,EACVI,WAAYA,EACZf,KAAK,SACLoB,iBAAkB,SAACC,GACjBP,EAAQO,O,MCjBoCI,IAAYC,SAA1DC,E,EAAAA,QAASC,E,EAAAA,SAAUC,E,EAAAA,UAAWC,E,EAAAA,YAEvB,SAASC,IACtB,OACE,yBAAKnG,MAAO,CAAEoG,WAAY,QACxB,kBAACC,EAAA,EAAD,KACE,sCACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACtD,KAAM6C,IAAY7C,KAAO+C,EAAQ/C,MAC5C,kBAAC0C,EAAD,OAEF,kBAAC,IAAD,CAAOY,OAAK,EAACtD,KAAM6C,IAAY7C,KAAOkD,EAAYlD,MAChD,kBAAC8B,EAAD,OAEF,kBAAC,IAAD,CAAOwB,OAAK,EAACtD,KAAM6C,IAAY7C,KAAOiD,EAAUjD,MAC9C,kBAAC2C,EAAD,OAEF,kBAAC,IAAD,CAAOW,OAAK,EAACtD,KAAM6C,IAAY7C,KAAOgD,EAAShD,MAC7C,kBAAC4C,EAAD,OAEF,kBAAC,IAAD,CAAOU,OAAK,EAACtD,KAAI,UAAK6C,IAAY7C,KAAjB,SACf,kBAAC3C,EAAD","file":"static/js/10.71274c95.chunk.js","sourcesContent":["import {\n  List,\n  Grid,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { moivesDbConstants as path } from \"../../../../constants\";\nimport HeaderPosterPrev from \"../../../../components/HeaderPosterPrev\";\nimport Slider from \"react-slick\";\nimport PersonSimpleCard from \"../../../../components/PersonSimpleCard\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport posterDefault from \"../../../../assets/images/no_poster.jpg\";\n\nconst headerGreadient =\n  \"linear-gradient(to right, rgba(19.61%, 7.84%, 7.84%, 1.00) 150px, rgba(27.45%, 13.73%, 13.73%, 0.84) 100%)\";\n\nfunction sliderNumberCurrent() {\n  let screen = window.screen.width;\n  if (screen <= 425) {\n    return 2;\n  }\n  if (screen > 425 && screen <= 1024) {\n    return 4;\n  }\n  if (screen > 1024 && screen <= 1440) {\n    return 6;\n  }\n  if (screen > 1140) {\n    return 8;\n  }\n}\n\nconst charaterSliderSettings = {\n  dots: true,\n  infinite: true,\n  speed: 500,\n  slidesToShow: sliderNumberCurrent(),\n  slidesToScroll: 1,\n  slidesToScroll: sliderNumberCurrent(),\n  appendDots: (dots) => (\n    <div>\n      <ul className=\"movie-preview__slider-dots\">{dots}</ul>\n    </div>\n  ),\n  customPaging: (i) => (\n    <div\n      style={{\n        width: \"20px\",\n        color: \"blue\",\n        border: \"1px blue solid\",\n        borderRadius: \"50%\",\n      }}\n    >\n      {i + 1}\n    </div>\n  ),\n};\n\nconst trailerSliderSettings = {\n  dots: true,\n  infinite: true,\n  speed: 500,\n  slidesToShow: 1,\n  slidesToScroll: 1,\n};\n\nexport default function MoviePreview() {\n  const params = useParams();\n  const [posterImages, setPosterImages] = useState([]);\n  const [backDrops, setBackDrops] = useState([]);\n  const [details, setDetails] = useState(null);\n  const [characters, setCharacters] = useState([]);\n  const [trailers, setTrailers] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [expanded, setExpanded] = useState(false);\n\n  useEffect(() => {\n    async function getData() {\n      let posterApi = await axios\n        .get(\n          `https://api.themoviedb.org/3/movie/${params.id}/images?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}&language=vi&include_image_language=en`\n        )\n        .then((res) => res.data.posters);\n      let backDropApi = await axios\n        .get(\n          `https://api.themoviedb.org/3/movie/${params.id}/images?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}&language=vi&include_image_language=en`\n        )\n        .then((res) => res.data.backdrops);\n      let detailApi = await axios\n        .get(\n          `https://api.themoviedb.org/3/movie/${params.id}?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}&language=vi`\n        )\n        .then((res) => res.data);\n      let characterApi = await axios\n        .get(\n          `https://api.themoviedb.org/3/movie/${params.id}/credits?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}`\n        )\n        .then((res) => res.data.cast);\n      let trailerApi = await axios\n        .get(\n          `https://api.themoviedb.org/3/movie/${params.id}/videos?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}`\n        )\n        .then((res) => res.data.results);\n      let reviewApi = await axios\n        .get(\n          `\n      https://api.themoviedb.org/3/movie/${params.id}/reviews?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}&page=1`\n        )\n        .then((res) => res.data.results);\n\n      setPosterImages(posterApi);\n      setBackDrops(backDropApi);\n      setDetails(detailApi);\n      setCharacters(characterApi);\n      setTrailers(trailerApi);\n      setReviews(reviewApi);\n    }\n    getData();\n  }, [\n    posterImages.length,\n    backDrops.length,\n    characters.length,\n    trailers.length,\n    reviews.length,\n  ]);\n\n  return (\n    <div className=\"movie-preview\">\n      <Grid container>\n        <HeaderPosterPrev\n          details={details}\n          backDrop={\n            backDrops.length === 0\n              ? \"\"\n              : `${path.images}${backDrops[0].file_path}`\n          }\n          backDropGradient={headerGreadient}\n          posterImages={\n            posterImages.length === 0\n              ? [posterDefault]\n              : posterImages.map((item) => path.images + item.file_path)\n          }\n        />\n        <Grid\n          container\n          item\n          spacing={2}\n          xs={12}\n          className=\"movie-preview__body-page\"\n        >\n          <Grid item xs={12}>\n            <Typography variant=\"h5\">Top Billed Cast</Typography>\n\n            {characters.length === 0 ? (\n              <div>Have not character information here</div>\n            ) : (\n              <Slider {...charaterSliderSettings}>\n                {characters.map((character) => {\n                  return (\n                    <div\n                      className=\"movie-preview__character\"\n                      key={character.id}\n                    >\n                      <PersonSimpleCard\n                        id={character.id}\n                        name={character.name}\n                        role={character.character}\n                        image={character.profile_path}\n                      />\n                    </div>\n                  );\n                })}\n              </Slider>\n            )}\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"h5\">Trailer:</Typography>\n            {trailers.length === 0 ? (\n              <Typography variant=\"subtitle1\" component=\"i\">\n                Have not trailer for this movie/tv!\n              </Typography>\n            ) : (\n              <Slider {...trailerSliderSettings}>\n                {trailers.map((trailer) => {\n                  return (\n                    <div key={trailer.id}>\n                      <iframe\n                        id={trailer.id}\n                        type=\"text/html\"\n                        className=\"movie-preview__trailer-iframe\"\n                        src={`https://www.youtube.com/embed/${trailer.key}`}\n                      ></iframe>\n                    </div>\n                  );\n                })}\n              </Slider>\n            )}\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"h5\">Reviews:</Typography>\n            {reviews.length === 0 ? (\n              <Typography variant=\"subtitle1\">\n                Have not reviewed any reviews yet\n              </Typography>\n            ) : (\n              <div className=\"movie-preview__reviews\">\n                <List>\n                  {reviews.map((review) => {\n                    return (\n                      <ListItem\n                        key={review.id}\n                        className={\n                          expanded !== review.id\n                            ? \"movie-preview__reviews-text\"\n                            : \"movie-preview__reviews-text--expanded\"\n                        }\n                      >\n                        <ListItemIcon>\n                          <AccountCircleIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={review.content} />\n                        <ListItemIcon>\n                          {expanded !== review.id ? (\n                            <ExpandMoreIcon\n                              onClick={() => {\n                                setExpanded(review.id);\n                              }}\n                            />\n                          ) : (\n                            <ExpandLessIcon\n                              onClick={() => {\n                                setExpanded(false);\n                              }}\n                            />\n                          )}\n                        </ListItemIcon>\n                      </ListItem>\n                    );\n                  })}\n                </List>\n              </div>\n            )}\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport CommonPage from \"../../../../components/CommonPage\";\n\nexport default function NowPlayingPage() {\n  const [list, setList] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/now_playing?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}&language=vi&page=${page}`\n      )\n      .then((res) => {\n        setList(res.data.results);\n        setTotalPages(res.data.total_pages);\n      });\n    \n  }, [list.length, page]);\n  \n  return (\n    <div>\n      <CommonPage\n        listData={list}\n        totalPages={totalPages}\n        type=\"movies\"\n        handlePageChange={(num) => {\n          setPage(num);\n        }}\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport CommonPage from \"../../../../components/CommonPage\";\n\nexport default function PopularPage() {\n  const [list, setList] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/popular?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}&language=vi&page=${page}`\n      )\n      .then((res) => {\n        setList(res.data.results);\n        setTotalPages(res.data.total_pages);\n      });\n  }, [list.length, page]);\n\n  return (\n    <div>\n      <CommonPage\n        listData={list}\n        totalPages={totalPages}\n        type=\"movies\"\n        handlePageChange={(num) => {\n          setPage(num);\n        }}\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport CommonPage from \"../../../../components/CommonPage\";\n\nexport default function TopRatedPage() {\n  const [list, setList] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/top_rated?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}&language=vi&page=${page}`\n      )\n      .then((res) => {\n        setList(res.data.results);\n        setTotalPages(res.data.total_pages);\n      });\n  }, [list.length, page]);\n \n  return (\n    <div>\n      <CommonPage\n        listData={list}\n        totalPages={totalPages}\n        type=\"movies\"\n        handlePageChange={(num) => {\n          setPage(num);\n        }}\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport CommonPage from \"../../../../components/CommonPage\";\n\nexport default function UpcomingPage() {\n  const [list, setList] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/upcoming?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}&language=vi&page=${page}`\n      )\n      .then((res) => {\n        setList(res.data.results);\n        setTotalPages(res.data.total_pages);\n      });\n  }, [list.length, page]);\n\n  return (\n    <div>\n      <CommonPage\n        listData={list}\n        totalPages={totalPages}\n        type=\"movies\"\n        handlePageChange={(num) => {\n          setPage(num);\n        }}\n      />\n    </div>\n  );\n}\n","import { Container } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport MoviePreview from \"./pages/MoviePreview\";\nimport NowPlayingPage from \"./pages/NowPlayingPage\";\nimport PopularPage from \"./pages/PopularPage\";\nimport TopRatedPage from \"./pages/TopRatedPage\";\nimport UpcomingPage from \"./pages/UpCommingPage\";\nimport { movieRoutes } from \"../../constants\";\n\nconst { popular, upcoming, top_rated, now_playing } = movieRoutes.children;\n\nexport default function Movies() {\n  return (\n    <div style={{ paddingTop: \"5em\" }}>\n      <Container>\n        <h1>MOVIES</h1>\n        <Switch>\n          <Route exact path={movieRoutes.path + popular.path}>\n            <PopularPage />\n          </Route>\n          <Route exact path={movieRoutes.path + now_playing.path}>\n            <NowPlayingPage />\n          </Route>\n          <Route exact path={movieRoutes.path + top_rated.path}>\n            <TopRatedPage />\n          </Route>\n          <Route exact path={movieRoutes.path + upcoming.path}>\n            <UpcomingPage />\n          </Route>\n          <Route exact path={`${movieRoutes.path}/:id`}>\n            <MoviePreview />\n          </Route>\n        </Switch>\n      </Container>\n    </div>\n  );\n}\n"],"sourceRoot":""}