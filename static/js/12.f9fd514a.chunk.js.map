{"version":3,"sources":["features/TvShows/pages/AiringTodayPage/index.jsx","features/TvShows/pages/TopRatedPage/index.jsx","features/TvShows/pages/PopularPage/index.jsx","features/TvShows/pages/OnTvPage/index.jsx","features/TvShows/pages/TvPreview/index.jsx","features/TvShows/index.jsx"],"names":["AiringTodayPage","useState","list","setList","page","setPage","totalPages","setTotalPages","useEffect","axios","get","process","then","response","data","results","total_pages","length","CommonPage","listData","handlePageChange","num","type","TopRatedPage","PopularPage","OnTvPage","sliderNumberCurrent","screen","window","width","charaterSliderSettings","dots","infinite","speed","slidesToShow","slidesToScroll","className","i","style","color","border","borderRadius","trailerSliderSettings","TvPreview","params","useParams","posterImages","setPosterImages","backDrops","setBackDrops","details","setDetails","characters","setCharacters","trailers","setTrailers","reviews","setReviews","expanded","setExpanded","a","id","res","posters","posterApi","backdrops","backDropApi","detailApi","cast","characterApi","trailerApi","reviewApi","getData","Grid","container","HeaderPosterPrev","backDrop","path","images","file_path","backDropGradient","posterDefault","map","item","spacing","xs","Typography","variant","character","key","PersonSimpleCard","name","role","image","profile_path","component","trailer","src","List","review","ListItem","ListItemIcon","ListItemText","primary","content","onClick","tvRoutes","children","popular","airing_today","on_tv","top_rated","TvShows","paddingTop","Container","exact"],"mappings":"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","file":"static/js/12.f9fd514a.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport CommonPage from \"../../../../components/CommonPage\";\nimport axios from \"axios\";\n\nexport default function AiringTodayPage() {\n  const [list, setList] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/tv/airing_today?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}&language=vi&page=${page}`\n      )\n      .then((response) => {\n        setList(response.data.results);\n        setTotalPages(response.data.total_pages);\n      });\n  }, [list.length, page, totalPages]);\n  return (\n    <div>\n      <CommonPage\n        listData={list}\n        handlePageChange={(num) => {\n          setPage(num);\n        }}\n        totalPages={totalPages}\n        type=\"tv\"\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport CommonPage from \"../../../../components/CommonPage\";\nimport axios from \"axios\";\n\nexport default function TopRatedPage() {\n  const [list, setList] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/tv/top_rated?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}&language=vi&page=${page}`\n      )\n      .then((response) => {\n        setList(response.data.results);\n        setTotalPages(response.data.total_pages);\n      });\n  }, [list.length, page, totalPages]);\n  return (\n    <div>\n      <CommonPage\n        listData={list}\n        handlePageChange={(num) => {\n          setPage(num);\n        }}\n        totalPages={totalPages}\n        type=\"tv\"\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport CommonPage from \"../../../../components/CommonPage\";\nimport axios from \"axios\";\n\nexport default function PopularPage() {\n  const [list, setList] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/tv/popular?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}&language=vi&page=${page}`\n      )\n      .then((response) => {\n        setList(response.data.results);\n        setTotalPages(response.data.total_pages);\n      });\n  }, [list.length, page, totalPages]);\n  return (\n    <div>\n      <CommonPage\n        listData={list}\n        handlePageChange={(num) => {\n          setPage(num);\n        }}\n        totalPages={totalPages}\n        type=\"tv\"\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport CommonPage from \"../../../../components/CommonPage\";\nimport axios from \"axios\";\n\nexport default function OnTvPage() {\n  const [list, setList] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/tv/on_the_air?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}&language=vi&page=${page}`\n      )\n      .then((response) => {\n        setList(response.data.results);\n        setTotalPages(response.data.total_pages);\n      });\n  }, [list.length, page, totalPages]);\n  return (\n    <div>\n      <CommonPage\n        listData={list}\n        handlePageChange={(num) => {\n          setPage(num);\n        }}\n        totalPages={totalPages}\n        type=\"tv\"\n      />\n    </div>\n  );\n}\n","import {\n  List,\n  Grid,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { moivesDbConstants as path } from \"../../../../constants\";\nimport HeaderPosterPrev from \"../../../../components/HeaderPosterPrev\";\nimport Slider from \"react-slick\";\nimport PersonSimpleCard from \"../../../../components/PersonSimpleCard\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport posterDefault from \"../../../../assets/images/no_poster.jpg\";\n\nconst headerGreadient =\n  \"linear-gradient(to right, rgba(19.61%, 7.84%, 7.84%, 1.00) 150px, rgba(27.45%, 13.73%, 13.73%, 0.84) 100%)\";\n\nfunction sliderNumberCurrent() {\n  let screen = window.screen.width;\n  if (screen <= 425) {\n    return 2;\n  }\n  if (screen > 425 && screen <= 1024) {\n    return 4;\n  }\n  if (screen > 1024 && screen <= 1440) {\n    return 6;\n  }\n  if (screen > 1140) {\n    return 8;\n  }\n}\n\nconst charaterSliderSettings = {\n  dots: true,\n  infinite: true,\n  speed: 500,\n  slidesToShow: sliderNumberCurrent(),\n  slidesToScroll: 1,\n  slidesToScroll: sliderNumberCurrent(),\n  appendDots: (dots) => (\n    <div>\n      <ul className=\"tv-preview__slider-dots\">{dots}</ul>\n    </div>\n  ),\n  customPaging: (i) => (\n    <div\n      style={{\n        width: \"20px\",\n        color: \"blue\",\n        border: \"1px blue solid\",\n        borderRadius: \"50%\",\n      }}\n    >\n      {i + 1}\n    </div>\n  ),\n};\n\nconst trailerSliderSettings = {\n  dots: true,\n  infinite: true,\n  speed: 500,\n  slidesToShow: 1,\n  slidesToScroll: 1,\n};\n\nexport default function TvPreview() {\n  const params = useParams();\n  const [posterImages, setPosterImages] = useState([]);\n  const [backDrops, setBackDrops] = useState([]);\n  const [details, setDetails] = useState(null);\n  const [characters, setCharacters] = useState([]);\n  const [trailers, setTrailers] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [expanded, setExpanded] = useState(false);\n\n  useEffect(() => {\n    async function getData() {\n      let posterApi = await axios\n        .get(\n          `https://api.themoviedb.org/3/tv/${params.id}/images?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}&language=vi&include_image_language=en`\n        )\n        .then((res) => res.data.posters);\n      let backDropApi = await axios\n        .get(\n          `https://api.themoviedb.org/3/tv/${params.id}/images?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}&language=vi&include_image_language=en`\n        )\n        .then((res) => res.data.backdrops);\n      let detailApi = await axios\n        .get(\n          `https://api.themoviedb.org/3/tv/${params.id}?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}&language=vi`\n        )\n        .then((res) => res.data);\n      let characterApi = await axios\n        .get(\n          `https://api.themoviedb.org/3/tv/${params.id}/credits?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}`\n        )\n        .then((res) => res.data.cast);\n      let trailerApi = await axios\n        .get(\n          `https://api.themoviedb.org/3/tv/${params.id}/videos?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}`\n        )\n        .then((res) => res.data.results);\n      let reviewApi = await axios\n        .get(\n          `\n        https://api.themoviedb.org/3/movie/${params.id}/reviews?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}&page=1`\n        )\n        .then((res) => res.data.results);\n\n      setPosterImages(posterApi);\n      setBackDrops(backDropApi);\n      setDetails(detailApi);\n      setCharacters(characterApi);\n      setTrailers(trailerApi);\n      setReviews(reviewApi);\n    }\n    getData();\n  }, [\n    posterImages.length,\n    backDrops.length,\n    characters.length,\n    trailers.length,\n    reviews.length,\n  ]);\n\n  return (\n    <div className=\"tv-preview\">\n      <Grid container>\n        <HeaderPosterPrev\n          details={details}\n          backDrop={\n            backDrops.length === 0\n              ? \"\"\n              : `${path.images}${backDrops[0].file_path}`\n          }\n          backDropGradient={headerGreadient}\n          posterImages={\n            posterImages.length === 0\n              ? [posterDefault]\n              : posterImages.map((item) => path.images + item.file_path)\n          }\n        />\n        <Grid\n          container\n          item\n          spacing={2}\n          xs={12}\n          className=\"tv-preview__body-page\"\n        >\n          <Grid item xs={12}>\n            <Typography variant=\"h5\">Top Billed Cast</Typography>\n\n            {characters.length === 0 ? (\n              <div>Have not character information here</div>\n            ) : (\n              <Slider {...charaterSliderSettings}>\n                {characters.map((character) => {\n                  return (\n                    <div className=\"tv-preview__character\" key={character.id}>\n                      <PersonSimpleCard\n                        id={character.id}\n                        name={character.name}\n                        role={character.character}\n                        image={character.profile_path}\n                      />\n                    </div>\n                  );\n                })}\n              </Slider>\n            )}\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"h5\">Trailer:</Typography>\n            {trailers.length === 0 ? (\n              <Typography variant=\"subtitle1\" component=\"i\">\n                Have not trailer for this movie/tv!\n              </Typography>\n            ) : (\n              <Slider {...trailerSliderSettings}>\n                {trailers.map((trailer) => {\n                  return (\n                    <div key={trailer.id}>\n                      <iframe\n                        id={trailer.id}\n                        type=\"text/html\"\n                        className=\"tv-preview__trailer-iframe\"\n                        src={`https://www.youtube.com/embed/${trailer.key}`}\n                      ></iframe>\n                    </div>\n                  );\n                })}\n              </Slider>\n            )}\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"h5\">Reviews:</Typography>\n            {reviews.length === 0 ? (\n              <Typography variant=\"subtitle1\">\n                Have not reviewed any reviews yet\n              </Typography>\n            ) : (\n              <div className=\"tv-preview__reviews\">\n                <List>\n                  {reviews.map((review) => {\n                    return (\n                      <ListItem\n                        key={review.id}\n                        className={\n                          expanded !== review.id\n                            ? \"tv-preview__reviews-text\"\n                            : \"tv-preview__reviews-text--expanded\"\n                        }\n                      >\n                        <ListItemIcon>\n                          <AccountCircleIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={review.content} />\n                        <ListItemIcon>\n                          {expanded !== review.id ? (\n                            <ExpandMoreIcon\n                              onClick={() => {\n                                setExpanded(review.id);\n                              }}\n                            />\n                          ) : (\n                            <ExpandLessIcon\n                              onClick={() => {\n                                setExpanded(false);\n                              }}\n                            />\n                          )}\n                        </ListItemIcon>\n                      </ListItem>\n                    );\n                  })}\n                </List>\n              </div>\n            )}\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import { Container } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport AiringTodayPage from \"./pages/AiringTodayPage\";\nimport TopRatedPage from \"./pages/TopRatedPage\";\nimport PopularPage from \"./pages/PopularPage\";\nimport OnTvPage from \"./pages/OnTvPage\";\nimport TvPreview from \"./pages/TvPreview\";\nimport { tvRoutes } from \"../../constants\";\n\nconst { popular, airing_today, on_tv, top_rated } = tvRoutes.children;\n\nexport default function TvShows() {\n  return (\n    <div style={{ paddingTop: \"5em\" }}>\n      <Container>\n        <h1>TV SHOWS</h1>\n        <Switch>\n          <Route exact path={tvRoutes.path + popular.path}>\n            <PopularPage />\n          </Route>\n          <Route exact path={tvRoutes.path + airing_today.path}>\n            <AiringTodayPage />\n          </Route>\n          <Route exact path={tvRoutes.path + top_rated.path}>\n            <TopRatedPage />\n          </Route>\n          <Route exact path={tvRoutes.path + on_tv.path}>\n            <OnTvPage />\n          </Route>\n          <Route exact path={`${tvRoutes.path}/:id`}>\n            <TvPreview />\n          </Route>\n        </Switch>\n      </Container>\n    </div>\n  );\n}\n"],"sourceRoot":""}