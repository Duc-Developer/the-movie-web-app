{"version":3,"sources":["features/Peoples/components/PersonInformation/index.jsx","features/Peoples/components/PersonStory/index.jsx","features/Peoples/pages/PeoplePreview/index.jsx"],"names":["PersonInformation","props","details","now","Date","className","Card","CardMedia","image","profile_path","path","images","avatarDefault","title","CardContent","Typography","variant","known_for_department","color","gender","birthday","parseInt","getFullYear","slice","deathday","place_of_birth","also_known_as","map","item","index","key","PersonStory","React","useState","languageCurrent","setLanguage","translations","name","movieCast","tvCast","cast","setCast","showAll","setShowAll","biographys","filter","english_name","Grid","container","spacing","xs","sm","TextField","select","value","onChange","e","target","label","helperText","option","MenuItem","clsx","gutterBottom","length","data","biography","ButtonBase","onClick","SliderSlickMovie","slideNumber","screen","window","width","sliderNumberCurrent","handleType","type","PeoplePreview","params","useParams","setDetails","personTranslations","setPersonTranslations","setMovieCast","setTVCast","useEffect","a","axios","get","id","process","then","res","detailApi","translationApi","movieCastApi","tvCastApi","getData","style","paddingTop","Container","md"],"mappings":"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","file":"static/js/11.1937e6b3.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, CardContent, CardMedia, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { moivesDbConstants as path } from \"../../../../constants\";\nimport avatarDefault from \"../../../../assets/images/default_avatar.png\";\n\nPersonInformation.propTypes = {\n  details: PropTypes.object,\n};\n\nexport default function PersonInformation(props) {\n  const { details } = props;\n  const now = new Date();\n  return (\n    <div className=\"person-information\">\n      <Card className=\"person-information__wrapper\">\n        <CardMedia\n          className=\"person-information__media\"\n          image={\n            details.profile_path\n              ? path.images + details.profile_path\n              : avatarDefault\n          }\n          title=\"Paella dish\"\n        />\n        <CardContent>\n          <Typography variant=\"h4\">Personal Info:</Typography>\n          <Typography variant=\"h6\">Known For:</Typography>\n          {!details.known_for_department ? (\n            <Typography variant=\"subtitle1\" color=\"error\">\n              None information\n            </Typography>\n          ) : (\n            <Typography variant=\"subtitle1\">\n              {details.known_for_department}\n            </Typography>\n          )}\n          <Typography variant=\"h6\">Gender:</Typography>\n          {!details.gender ? (\n            <Typography variant=\"subtitle1\" color=\"error\">\n              None information\n            </Typography>\n          ) : (\n            <Typography variant=\"subtitle1\">\n              {details.gender === 1 ? \"female\" : \"male\"}\n            </Typography>\n          )}\n          <Typography variant=\"h6\">Birthday:</Typography>\n          {!details.birthday ? (\n            <Typography variant=\"subtitle1\" color=\"error\">\n              None information\n            </Typography>\n          ) : (\n            <Typography variant=\"subtitle1\">\n              {`${details.birthday} (${\n                parseInt(now.getFullYear()) -\n                parseInt(details.birthday.slice(0, 4))\n              } years old)`}\n            </Typography>\n          )}\n          <Typography variant=\"h6\">Death Day:</Typography>\n          {!details.deathday ? (\n            <Typography variant=\"subtitle1\" color=\"error\">\n              None information\n            </Typography>\n          ) : (\n            <Typography variant=\"subtitle1\">{details.deathday}</Typography>\n          )}\n          <Typography variant=\"h6\">Place of Birth:</Typography>\n          {!details.place_of_birth ? (\n            <Typography variant=\"subtitle1\" color=\"error\">\n              None information\n            </Typography>\n          ) : (\n            <Typography variant=\"subtitle1\">\n              {details.place_of_birth}\n            </Typography>\n          )}\n          <Typography variant=\"h6\">Also Known As:</Typography>\n          {!details.also_known_as ? (\n            <Typography variant=\"subtitle1\" color=\"error\">\n              None information\n            </Typography>\n          ) : (\n            <div>\n              {details.also_known_as.map((item, index) => {\n                return (\n                  <Typography key={index} variant=\"subtitle1\" color=\"primary\">\n                    {item}\n                  </Typography>\n                );\n              })}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  ButtonBase,\n  Grid,\n  MenuItem,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport SliderSlickMovie from \"../../../../components/SliderSlickMovie\";\n\nPersonStory.propTypes = {\n  translations: PropTypes.array,\n  name: PropTypes.string,\n  movieCast: PropTypes.array,\n  tvCast: PropTypes.array,\n};\n\nexport default function PersonStory(props) {\n  const [languageCurrent, setLanguage] = React.useState(\"en\");\n  const { translations, name, movieCast, tvCast } = props;\n  const [cast, setCast] = React.useState(tvCast);\n  const [showAll, setShowAll] = React.useState(false);\n  const biographys = translations.filter(\n    (item) => item.english_name === languageCurrent\n  );\n\n  function sliderNumberCurrent() {\n    let screen = window.screen.width;\n    if (screen <= 425) {\n      return 1;\n    }\n    if (screen > 425 && screen <= 1024) {\n      return 3;\n    }\n    if (screen > 1024 && screen <= 1440) {\n      return 5;\n    }\n    if (screen > 1140) {\n      return 6;\n    }\n  }\n\n  function handleType(type, title) {\n    // console.log(type, title)\n    if (type === \"movie\") {\n      setCast(movieCast);\n      return;\n    }\n    if (type === \"tv\") {\n      setCast(tvCast);\n      return;\n    }\n  }\n\n  return (\n    <div className=\"person-story\">\n      <Grid container spacing={1}>\n        <Grid item xs={12} sm={9}>\n          <Typography variant=\"h4\">{name}</Typography>\n        </Grid>\n        <Grid item xs={12} sm={3}>\n          <TextField\n            select\n            value={languageCurrent}\n            onChange={(e) => {\n              setLanguage(e.target.value);\n            }}\n            label=\"Language\"\n            helperText=\"Please select your language\"\n          >\n            {translations.map((option, index) => {\n              return (\n                <MenuItem key={index} value={option.english_name}>\n                  {option.name}\n                </MenuItem>\n              );\n            })}\n          </TextField>\n        </Grid>\n        <Grid className=\"person-story__biography\" item xs={12}>\n          <Typography variant=\"h6\">Biography</Typography>\n          <Typography\n            className={clsx({\n              \"person-story__biography--text-hidden\": !showAll,\n              \"person-story__biography--text-show-all\": showAll,\n            })}\n            variant=\"body2\"\n            gutterBottom\n          >\n            {biographys.length && biographys[0].data.biography}\n          </Typography>\n          <ButtonBase\n            onClick={() => {\n              setShowAll(!showAll);\n            }}\n          >\n            {showAll ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n          </ButtonBase>\n        </Grid>\n        <Grid item xs={12}>\n          {cast && (\n            <SliderSlickMovie\n              data={cast}\n              title=\"Known For:\"\n              slideNumber={sliderNumberCurrent()}\n              // switchDisabled\n              handleType={(type, title) => {\n                handleType(type, title);\n              }}\n            />\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport PersonInformation from \"../../components/PersonInformation\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport PersonStory from \"../../components/PersonStory\";\n\nexport default function PeoplePreview(props) {\n  const params = useParams();\n  const [details, setDetails] = useState(null);\n  const [personTranslations, setPersonTranslations] = useState([]);\n  const [movieCast, setMovieCast] = useState([]);\n  const [tvCast, setTVCast] = useState([]);\n  useEffect(() => {\n    async function getData() {\n      let detailApi = await axios\n        .get(\n          `https://api.themoviedb.org/3/person/${params.id}?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}&language=vi`\n        )\n        .then((res) => res.data);\n      let translationApi = await axios\n        .get(\n          `https://api.themoviedb.org/3/person/${params.id}/translations?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}`\n        )\n        .then((res) => res.data.translations);\n      let movieCastApi = await axios\n        .get(\n          `https://api.themoviedb.org/3/person/${params.id}/movie_credits?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}&language=vi`\n        )\n        .then((res) => res.data.cast);\n      let tvCastApi = await axios\n        .get(\n          `https://api.themoviedb.org/3/person/${params.id}/tv_credits?api_key=${process.env.REACT_APP_THE_MOVIES_API_KEY}&language=vi`\n        )\n        .then((res) => res.data.cast);\n      setDetails(detailApi);\n      setPersonTranslations(translationApi);\n      setMovieCast(movieCastApi);\n      setTVCast(tvCastApi);\n    }\n    getData();\n  }, [personTranslations.length, params.id, movieCast.length, tvCast.length]);\n\n  return (\n    <div style={{ paddingTop: \"5em\" }}>\n      <Container>\n        <Grid container spacing={1}>\n          <Grid item xs={12} md={3}>\n            {!details ? (\n              <div>Loading...</div>\n            ) : (\n              <PersonInformation details={details} />\n            )}\n          </Grid>\n          <Grid item xs={12} md={9}>\n            {!details || !movieCast.length || !tvCast.length ? (\n              <div>Loading...</div>\n            ) : (\n              <PersonStory\n                name={details.name}\n                translations={personTranslations}\n                movieCast={movieCast}\n                tvCast={tvCast}\n              />\n            )}\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n"],"sourceRoot":""}